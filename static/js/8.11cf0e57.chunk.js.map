{"version":3,"sources":["widget/Loading.tsx","widget/Dot.tsx","assets/loading.svg","page/Message.tsx"],"names":["T","props","text","style","fontSize","textAlign","width","padding","src","require","alt","position","marginLeft","marginTop","Dot","s","span","module","exports","S","Content","styled","div","List","ListIcon","img","ListBox","ListBoxTop","ListBoxBottom","Link","a","PreyText","ContentText","Empty","history","useHistory","useState","list","setList","useEffect","GET_NOTICES","then","rs","length","map","item","index","key","avatar_url","name","create_time","onClick","SET_NOTICE_READ","id","aid","push","title","dangerouslySetInnerHTML","__html","content"],"mappings":"0IAAA,WA+BeA,IA7BU,SAACC,GAAW,IAAD,EACFA,EAAxBC,YAD0B,MACnB,aADmB,EAGlC,OACE,uBACEC,MAAO,CACLC,SAAU,GACVC,UAAW,SACXC,MAAO,OACPC,QAAS,KAGD,eAATL,GACC,uBACEM,IAAKC,EAAQ,KACbC,IAAI,GACJP,MAAO,CACLG,MAAO,GACPK,SAAU,WACVC,YAAa,GACbC,WAAY,KAIjBX,K,uLCvBP,IAAMY,E,KAAMC,EAAEC,KAAL,KASMhB,IAJK,WAClB,OAAO,gBAACc,EAAD,iB,oBCTTG,EAAOC,QAAU,IAA0B,qC,sqDCQ3C,IAAMC,EAAS,CACbC,QAASC,IAAOC,IAAT,KASPC,KAAMF,IAAOC,IAAT,KAOJE,SAAUH,IAAOI,IAAT,KAQRC,QAASL,IAAOC,IAAT,KAGPK,WAAYN,IAAOC,IAAT,KAIVM,cAAeP,IAAOC,IAAT,KAIbO,KAAMR,IAAOS,EAAT,KAOJC,SAAUV,IAAOL,KAAT,KAIRgB,YAAaX,IAAOC,IAAT,KAIXW,MAAOZ,IAAOC,IAAT,MAgEQtB,UAvDK,WAClB,IAAMkC,EAAUC,cADQ,EAGAC,mBAAc,IAHd,mBAGjBC,EAHiB,KAGXC,EAHW,KAWxB,OANAC,qBAAU,WACRC,cAAcC,MAAK,SAACC,GAClBJ,EAAQI,QAET,IAGD,oCACIL,EAEEA,EAAKM,QAAU,EACjB,kBAAC,IAAD,CAASzC,KAAK,mBAEd,kBAACiB,EAAEC,QAAH,KACGiB,EAAKO,KAAI,SAACC,EAAWC,GACpB,OACE,kBAAC3B,EAAEI,KAAH,CAAQwB,IAAKD,GACX,kBAAC3B,EAAEK,SAAH,CAAYhB,IAAKqC,EAAKG,aACtB,kBAAC7B,EAAEO,QAAH,KACE,kBAACP,EAAEQ,WAAH,KACGkB,EAAKI,KACN,kBAAC,IAAD,MACCJ,EAAKK,aAER,kBAAC/B,EAAES,cAAH,KACE,kBAACT,EAAEY,SAAH,eACA,kBAACZ,EAAEU,KAAH,CACEsB,QAAS,WACPC,YAAgB,CAAEC,GAAIR,EAAKS,MAAOb,MAAK,SAACC,GACtCR,EAAQqB,KAAR,mBAAyBV,EAAKS,WAIjCT,EAAKW,OAAS,WAEjB,kBAACrC,EAAEY,SAAH,6BAEF,kBAACZ,EAAEa,YAAH,CACEyB,wBAAyB,CAAEC,OAAQb,EAAKc,iBA7BpD,kBAAC,IAAD","file":"static/js/8.11cf0e57.chunk.js","sourcesContent":["import * as React from \"react\"\r\n\r\nconst T: React.FC<any> = (props) => {\r\n  const { text = \"Loading...\" } = props\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        fontSize: 15,\r\n        textAlign: \"center\",\r\n        width: \"100%\",\r\n        padding: 10,\r\n      }}\r\n    >\r\n      {text === \"Loading...\" && (\r\n        <img\r\n          src={require(\"../assets/loading.svg\")}\r\n          alt=\"\"\r\n          style={{\r\n            width: 20,\r\n            position: \"absolute\",\r\n            marginLeft: -22,\r\n            marginTop: -1,\r\n          }}\r\n        />\r\n      )}\r\n      {text}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default T\r\n","import * as React from \"react\"\r\nimport s from \"styled-components\"\r\n\r\nconst Dot = s.span`\r\n    font-weight: 700;\r\n    color: #ccc;\r\n    margin: 0 6px;\r\n`\r\nconst T: React.FC = () => {\r\n  return <Dot>•</Dot>\r\n}\r\n\r\nexport default T\r\n","module.exports = __webpack_public_path__ + \"static/media/loading.365b0ce0.svg\";","import React, { useEffect, useState } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Dot from \"../widget/Dot\"\r\nimport { GET_NOTICES } from \"../api\"\r\nimport { useHistory } from \"react-router\"\r\nimport { SET_NOTICE_READ } from \"../api\"\r\nimport Loading from \"../widget/Loading\"\r\n\r\nconst S: any = {\r\n  Content: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 800px;\r\n    background: rgb(255 255 255 / 88%);\r\n    backdrop-filter: blur(5px);\r\n    padding: 15px;\r\n    margin: 0 auto;\r\n  `,\r\n  List: styled.div`\r\n    display: flex;\r\n    font-size: 14px;\r\n    border-bottom: 1px solid rgb(238, 238, 238);\r\n    padding-bottom: 10px;\r\n    margin-bottom: 10px;\r\n  `,\r\n  ListIcon: styled.img`\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 5px;\r\n    margin-right: 10px;\r\n    position: relative;\r\n    top: 2px;\r\n  `,\r\n  ListBox: styled.div`\r\n    flex: 1 1 0%;\r\n  `,\r\n  ListBoxTop: styled.div`\r\n    font-size: 12px;\r\n    color: #999;\r\n  `,\r\n  ListBoxBottom: styled.div`\r\n    font-size: 13px;\r\n    margin-top: 2px;\r\n  `,\r\n  Link: styled.a`\r\n    color: skyblue;\r\n    :hover {\r\n      cursor: pointer;\r\n      text-decoration: underline;\r\n    }\r\n  `,\r\n  PreyText: styled.span`\r\n    color: #999;\r\n    margin-right: 5px;\r\n  `,\r\n  ContentText: styled.div`\r\n    font-size: 14px;\r\n    margin-top: 5px;\r\n  `,\r\n  Empty: styled.div`\r\n    text-align: center;\r\n    margin-bottom: 10px;\r\n    font-size: 15px;\r\n    width: 100%;\r\n    padding: 10px;\r\n  `,\r\n}\r\n\r\nconst T: React.FC = () => {\r\n  const history = useHistory()\r\n\r\n  const [list, setList] = useState<any>(\"\")\r\n\r\n  useEffect(() => {\r\n    GET_NOTICES().then((rs) => {\r\n      setList(rs)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {!list ? (\r\n        <Loading />\r\n      ) : list.length <= 0 ? (\r\n        <Loading text=\"- No Message -\" />\r\n      ) : (\r\n        <S.Content>\r\n          {list.map((item: any, index: any) => {\r\n            return (\r\n              <S.List key={index}>\r\n                <S.ListIcon src={item.avatar_url} />\r\n                <S.ListBox>\r\n                  <S.ListBoxTop>\r\n                    {item.name}\r\n                    <Dot />\r\n                    {item.create_time}\r\n                  </S.ListBoxTop>\r\n                  <S.ListBoxBottom>\r\n                    <S.PreyText>在</S.PreyText>\r\n                    <S.Link\r\n                      onClick={() => {\r\n                        SET_NOTICE_READ({ id: item.aid }).then((rs: any) => {\r\n                          history.push(`/article/${item.aid}`)\r\n                        })\r\n                      }}\r\n                    >\r\n                      {item.title || \"NOTHING\"}\r\n                    </S.Link>\r\n                    <S.PreyText>中评论:</S.PreyText>\r\n                  </S.ListBoxBottom>\r\n                  <S.ContentText\r\n                    dangerouslySetInnerHTML={{ __html: item.content }}\r\n                  />\r\n                </S.ListBox>\r\n              </S.List>\r\n            )\r\n          })}\r\n        </S.Content>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default T\r\n"],"sourceRoot":""}